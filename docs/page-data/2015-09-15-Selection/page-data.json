{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2015-09-15-Selection/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Mohwa Blog"}},"markdownRemark":{"id":"f27eebc6-f7b1-5825-8507-ae00243057a7","excerpt":"Selection 정의 Selection 은 마우스 또는 키보드를 통해, 컨텐츠를 선택, 또는 선택된 영역을 제어 하기위한 모든 특성들을 제공한다. 관련 용어 정의 Selection…","html":"<h2><strong>Selection</strong></h2>\n<ul>\n<li>정의\n<ul>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Selection\">Selection</a> 은 마우스 또는 키보드를 통해, 컨텐츠를 <strong>선택</strong>, 또는 <strong>선택된 영역을 제어</strong> 하기위한 모든 특성들을 제공한다.</li>\n</ul>\n</li>\n</ul>\n<h2><strong>관련 용어</strong></h2>\n<ul>\n<li>\n<p>정의</p>\n<ul>\n<li><strong>Selection</strong> 에 대해 공부할때, 가장 큰 장애물이 되는것은, 각 <strong>용어</strong>에 대한 <strong>이해도</strong>라 생각한다. 즉 <strong>용어</strong>에 대한 정확한 이해없이는, 제공되는 <strong>API</strong> 기능에 대해 이해하기 힘든 부분이 존재하기 때문이다.</li>\n</ul>\n</li>\n<li>\n<p>용어 설명</p>\n<ul>\n<li>\n<p><span style=\"color:#c11f1f\">Selection / Selection object</span>: 사용자가 마우스(드래그) 또는 키보드(키 조작)를 통해, <strong>선택된 텍스트</strong>의 <strong>범위</strong>를 말한다.</p>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">anchor</span>: 선택된 범위가 <strong>시작되는 지점</strong>을 말한다.</p>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">focus</span>: 선택된 범위가 <strong>끝나는 지점</strong>을 말한다.</p>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">range</span>: 선택된 범위의 <strong>문서 조각</strong>들을 말한다.</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2><strong>특성</strong></h2>\n<ul>\n<li>\n<p><strong>Properties</strong></p>\n<p>이와같은 <strong>HTML</strong> 코드가 있다고 가정하고, 아래 나열된 속성들을 살펴보기로한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> container 객체 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>div id<span class=\"token operator\">=</span><span class=\"token string\">\"text-container\"</span> contenteditable<span class=\"token operator\">=</span><span class=\"token string\">\"true\"</span><span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"height: 20px\"</span><span class=\"token operator\">></span><span class=\"token constant\">HELLO</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"height: 20px;padding-left: 5px;\"</span><span class=\"token operator\">></span><span class=\"token constant\">WORLD</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"height: 20px;padding-left: 5px;\"</span><span class=\"token operator\">></span><span class=\"token constant\">TEST</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n\t<span class=\"token operator\">&lt;</span>span style<span class=\"token operator\">=</span><span class=\"token string\">\"height: 20px;padding-left: 5px;\"</span><span class=\"token operator\">></span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>\n<p><span style=\"color:#6298c1\">selection.anchorNode</span>:</p>\n<p>선택된 범위가 시작되는 지점의 노드를 반환한다.</p>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.anchorOffset</span>:</p>\n<p>anchorNode 범위내에 anchor(선택된 범위가 시작되는 지점) 이전의 문자열(<strong>HE(2개)</strong>)의 갯수를 반환한다.</p>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_1.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.focusNode</span>:</p>\n<p>선택된 범위가 끝나는 지점의 노드를 반환한다.</p>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.focusOffset</span>:</p>\n<ul>\n<li>focusNode 범위내에 focus(선택된 범위가 끝나는 지점)의 문자열(<strong>WORLD(5개)</strong>) 갯수를 반환한다.</li>\n</ul>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_2.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p><u><span style=\"color:#6298c1\">anchorOffset</span> 과 <span style=\"color:#6298c1\">focusOffset</span> 이 좀 이해하기 힘들더라도(개인적일수도 있지만;;;) 그만큼 중요한 부분이니, 반드시 <b>이해</b>하고 넘어가길 바란다.</u></p>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.isCollapsed</span>:</p>\n<ul>\n<li>\n<p>선택된 범위가 시작되는 지점(<span style=\"color:#6298c1\">anchorOffset</span>)과, 끝나는 지점(<span style=\"color:#6298c1\">focusOffset</span>)이 동일한지 여부를 반환한다.</p>\n</li>\n<li>\n<p>만약 첫 번째 문자와 두 번째 문자 사이를 <strong>클릭</strong>(<span style=\"color:#6298c1\">드래그</span>가 아닌)한 경우, <span style=\"color:#6298c1\">anchorOffset</span> 과 <span style=\"color:#6298c1\">focusOffset</span> 은 각각 <span style=\"color:#c11f1f\">1</span>을 반환하게 된다.</p>\n<ul>\n<li>선택이 시작된 지점 <strong>이전의 문자열(H)</strong> 갯수(anchorOffset): <span style=\"color:#c11f1f\">1</span></li>\n<li>선택이 <strong>끝난 지점의 문자열(H)</strong> 갯수(focusOffset): <span style=\"color:#c11f1f\">1</span></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_3.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.rangeCount</span>:</p>\n<ul>\n<li>\n<p>선택된 범위의 <span style=\"color:#6298c1\">range</span> 크기를 반환한다.</p>\n</li>\n<li>\n<p>페이지 로드 후 <u>사용자가 문서를 <b>클릭</b>하지 않았을경우</u>, <span style=\"color:#6298c1\">rangeCount</span> 는 <span style=\"color:#c11f1f\">0</span>을, <b>클릭한 후</b>에는 <span style=\"color:#c11f1f\">1</span>을 반환하게 된다.</p>\n</li>\n<li>\n<p>사용자는 <u>일반적으로 한번에 하나의 <span style=\"color:#6298c1\">range</span> 를 선택할 수 있다.</u></p>\n</li>\n<li>\n<p><strong>Gecko</strong> 브라우저에서는 Multiple <span style=\"color:#6298c1\">range</span> 를 선택할 수 있다.</u>(Ctrl or Command 키를 통해)</p>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_4.jpg\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Methods</strong></p>\n<ul>\n<li>\n<p><span style=\"color:#6298c1\">selection.getRangeAt(range index)</span>:</p>\n<ul>\n<li>선택된 하나의 <span style=\"color:#6298c1\">range object</span> 를 반환한다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.collapse(parentNode, offset)</span>:</p>\n<ul>\n<li><span style=\"color:#6298c1\">anchorNode</span> 를 전달된 offset 으로 지정한다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.extend(parentNode, offset)</span>:</p>\n<ul>\n<li>\n<p><span style=\"color:#6298c1\">focusNode</span> 를 전달된 offset 으로 지정한다.</p>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_5.jpg\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li>\n<p>anchorNode 와 focusNode 를 각각의 메서드를 통해 <u>새로 지정하면, 새로운 <b>선택</b> 범위를 만들어낼수 있다.</u></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\nselection<span class=\"token punctuation\">.</span><span class=\"token function\">collapse</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nselection<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span>anchorNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// HELLO</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// HELLO</span>\n\nselection<span class=\"token punctuation\">.</span><span class=\"token function\">collapse</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nselection<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span>anchorNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// WORLD</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TEST</span>\n\nselection<span class=\"token punctuation\">.</span><span class=\"token function\">collapse</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nselection<span class=\"token punctuation\">.</span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>container<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span>anchorNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// !!!!</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span>focusNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// !!!!</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.collapseToStart()</span>:</p>\n<ul>\n<li>선택된 범위가 시작되는 지점으로 <strong>커서</strong>를 이동시킨다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.collapseToEnd()</span>:</p>\n<ul>\n<li>선택된 범위가 끝나는 지점으로 <strong>커서</strong>를 이동시킨다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.selectAllChildren(parentNode)</span>:</p>\n<ul>\n<li>이전에 선택된 범위를 <strong>취소</strong>(삭제)한 후, 전달된 parentNode 의 모든 자식 노드들을 선택 한다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.addRange(range)</span>:</p>\n<ul>\n<li>\n<p>새로운 range(선택 범위의 문서 조각) 를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token keyword\">var</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// container 의 모든 자식 노드들에 대한 range object 를 생성 후 addRange 메서드를 통해, 선택 범위에 추가시킨다.</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> container<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n\t<span class=\"token keyword\">var</span> childNode <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span>childNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">var</span> range <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createRange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\trange<span class=\"token punctuation\">.</span><span class=\"token function\">selectNode</span><span class=\"token punctuation\">(</span>childNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 새로운 range(선택 범위의 문서 조각) 를 추가한다.</span>\n\tselection<span class=\"token punctuation\">.</span><span class=\"token function\">addRange</span><span class=\"token punctuation\">(</span>range<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_6.jpg\" alt=\"\"></p>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.removeAllRanges()</span>:</p>\n<ul>\n<li>모든 range(선택된 범위의 문서 조각)를 삭제한다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.deleteFromDocument()</span>:</p>\n<ul>\n<li>선택된 범위의 모든 text 를 삭제한다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.toString()</span>:</p>\n<ul>\n<li>선택된 범위의 모든 컨텐츠를 반환한다.</li>\n</ul>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">selection.containsNode(aNode, aPartlyContained)</span>:</p>\n<ul>\n<li>전달된 노드(<strong>aNode</strong>)가 선택된 범위안에 있는지 여부를 반환한다.</li>\n</ul>\n<p><img src=\"http://mohwa.github.io/blog/assets/images/posts/Selection/selection_6.jpg\" alt=\"\"></p>\n<p>위 그림에서와 같이 <span style=\"color:#6298c1\">helloNode</span> 는 <u>선택된 범위에 포함되지 않기때문에</u>, <span style=\"color:#c11f1f\">false</span> 를 <strong>반환</strong>하게 되며, <span style=\"color:#6298c1\">worldNode</span> 는 그 반대인 <span style=\"color:#c11f1f\">true</span> 를 <strong>반환</strong>하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token keyword\">var</span> container <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"text-container\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// hello 문자열 노드</span>\n<span class=\"token keyword\">var</span> helloNode <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// world 문자열 노드</span>\n<span class=\"token keyword\">var</span> worldNode <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">getElementsByTagName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'span'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span><span class=\"token function\">containsNode</span><span class=\"token punctuation\">(</span>helloNode<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>selection<span class=\"token punctuation\">.</span><span class=\"token function\">containsNode</span><span class=\"token punctuation\">(</span>worldNode<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2><strong>API 테스트</strong></h2>\n<p>아래 코드는 <strong>Chrome</strong> 브라우저에서만 테스트되었습니다.(소스 참조시 반드시 다른 브라우저에서도 테스트 하시기 바랍니다)</p>\n<iframe width=\"100%\" height=\"600\" src=\"http://jsfiddle.net/mohwa/3bd9vao3/1/embedded/result,html\" allowfullscreen=\"allowfullscreen\" frameborder=\"0\"></iframe>","frontmatter":{"title":"Selection","date":"September 15, 2015","description":"Selection API 사용방법"}},"previous":{"fields":{"slug":"/2015-08-31-binary-inJS/"},"frontmatter":{"title":"JavaScript 를 통해 Binary Data 조작하기"}},"next":{"fields":{"slug":"/2015-10-09-enumerable-inJS/"},"frontmatter":{"title":"JS Enumerable(열거자) or Nonenumerable(비 열거자)"}}},"pageContext":{"id":"f27eebc6-f7b1-5825-8507-ae00243057a7","previousPostId":"1ca6bc0e-6d01-5198-8ea1-e7db4fe4ee81","nextPostId":"d2fb7ccc-6da9-59ad-bdc0-2cf703702189"}},
    "staticQueryHashes": ["2841359383","3257411868"]}