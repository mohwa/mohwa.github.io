{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/docker-intermediate-image/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Mohwa Blog"}},"markdownRemark":{"id":"a7d6fdb9-c1cf-5298-8090-040e371c1492","excerpt":"테스트 환경 OS: centos/7 Docker Version: 20.10.12 호스트 OS 및 Docker Version 에 따라, 이 글의 가 다를 수 있습니다. Where is /var/lib/docker on Mac/OS X Mac 환경의 Docker 는 /var/lib…","html":"<p>테스트 환경</p>\n<ul>\n<li>\n<p>OS: centos/7</p>\n</li>\n<li>\n<p>Docker Version: 20.10.12</p>\n<blockquote>\n<p>호스트 OS 및 Docker Version 에 따라, 이 글의 <code class=\"language-text\">테스트 결과</code>가 다를 수 있습니다.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/38532483/where-is-var-lib-docker-on-mac-os-x\">Where is /var/lib/docker on Mac/OS X</a></li>\n<li><a href=\"https://memostack.tistory.com/3\">Mac 환경의 Docker 는 /var/lib/docker가 없다</a></li>\n</ul>\n</li>\n<li>\n<p>도커 <code class=\"language-text\">이미지</code> 및 <code class=\"language-text\">컨테이너</code>가 초기화되어있습니다.</p>\n</li>\n</ul>\n<h2>간단한 Dockerfile 을 생성한다.</h2>\n<p><code class=\"language-text\">FROM</code>, <code class=\"language-text\">RUN</code>, <code class=\"language-text\">COPY</code> 명령들이 포함된 <code class=\"language-text\">Dockerfile</code> 을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:latest</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo first</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> ./third.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"echo\"</span>, <span class=\"token string\">\"fourth\"</span>]</span></code></pre></div>\n<h2>도커 이미지가 생성되는 과정</h2>\n<p><code class=\"language-text\">docker build</code> 명령으로, <code class=\"language-text\">docker-layers:0.0.1</code> 이미지를 생성합니다.</p>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/build/\">https://docs.docker.com/engine/reference/commandline/build/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker build -t docker-layers:0.0.1 .\n\nSending build context to Docker daemon  4.096kB\nStep 1/5 : FROM alpine:latest\nlatest: Pulling from library/alpine\n\n# 1번\n59bf1c3509f3: Pull complete\n\n# 2번\nDigest: sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300\nStatus: Downloaded newer image for alpine:latest\n\n# 3번\n ---&gt; c059bfaa849c\nStep 2/5 : RUN echo first\n\n# 4번\n ---&gt; Running in 80441f848a02\n\n# 5번\nfirst\n\n# 6번\nRemoving intermediate container 80441f848a02\n\n# 7번\n ---&gt; c1ee277ee0b6\nStep 3/5 : COPY ./second.txt .\n ---&gt; 13b825a700e2\nStep 4/5 : ADD ./third.txt .\n ---&gt; 6b786cea2e12\nStep 5/5 : CMD [&quot;echo&quot;, &quot;fourth&quot;]\n ---&gt; Running in a30a8b6dc7a0\nRemoving intermediate container a30a8b6dc7a0\n ---&gt; 6533a93ed3e4\n\n# 8번\nSuccessfully built 6533a93ed3e4\nSuccessfully tagged docker-layers:0.0.1</code></pre></div>\n<ol>\n<li>\n<p><code class=\"language-text\">59bf1c3509f3</code>: Pull complete</p>\n<ul>\n<li><code class=\"language-text\">alpine:latest</code> 이미지의 <code class=\"language-text\">중간 이미지</code>입니다.</li>\n</ul>\n</li>\n<li>\n<p>Digest: <code class=\"language-text\">sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300</code></p>\n<ul>\n<li>\n<p>원격 registry 에서 관리되는 <code class=\"language-text\">alpine:latest</code> 이미지의 <code class=\"language-text\">digest</code> 값입니다.</p>\n<blockquote>\n<p>이 값을 통해, 해당 이미지를 <code class=\"language-text\">pull</code> 할 수 있습니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">docker pull alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300</code></pre></div>\n<ul>\n<li>\n<p><a href=\"https://docs.docker.com/engine/reference/commandline/pull/\">https://docs.docker.com/engine/reference/commandline/pull/</a></p>\n</li>\n<li>\n<p>원격 registry 에서 가져온 이미지 아이디(<code class=\"language-text\">c059bfaa849c</code>)는 항상 같습니다. 그 이유는 빌드 시점에서 생성된 아이디를 갖기 때문입니다.</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>---> <code class=\"language-text\">c059bfaa849c</code></p>\n<ul>\n<li><code class=\"language-text\">alpine:latest</code> 이미지 아이디입니다.</li>\n</ul>\n</li>\n<li>\n<p>---> Running in <code class=\"language-text\">80441f848a02</code></p>\n<ul>\n<li><code class=\"language-text\">RUN</code> 명령을 수행하기위해, 이전에 생성된 <code class=\"language-text\">alpine:latest</code> 이미지(<code class=\"language-text\">c059bfaa849c</code>)를 기준으로, 중간 컨테이너(<code class=\"language-text\">80441f848a02</code>)를 생성합니다.</li>\n</ul>\n</li>\n<li>\n<p>first</p>\n<ul>\n<li>중간 컨테이너에서 <code class=\"language-text\">RUN</code> 명령을 수행한 결과입니다.</li>\n</ul>\n</li>\n<li>\n<p>Removing intermediate container <code class=\"language-text\">80441f848a02</code></p>\n<ul>\n<li>중간 컨테이너(<code class=\"language-text\">80441f848a02</code>)를 삭제합니다.</li>\n</ul>\n</li>\n<li>\n<p>---> <code class=\"language-text\">c1ee277ee0b6</code></p>\n<ul>\n<li>\n<p><code class=\"language-text\">RUN</code> 명령이 수행된 중간 컨테이너(<code class=\"language-text\">80441f848a02</code>)를 기준으로, 중간 이미지(<code class=\"language-text\">c1ee277ee0b6</code>)를 생성합니다.</p>\n</li>\n<li>\n<p>이때 생성된 <code class=\"language-text\">중간 이미지</code>는 일종의 <code class=\"language-text\">스냅샷</code>과 유사합니다.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Successfully built <code class=\"language-text\">6533a93ed3e4</code></p>\n<ul>\n<li>8번 이전까지 이 과정이 반복되며, 모든 과정이 끝나면, 생성된 <code class=\"language-text\">docker-layers:0.0.1</code> 이미지 아이디(<code class=\"language-text\">6533a93ed3e4</code>)가 출력됩니다.</li>\n</ul>\n</li>\n</ol>\n<h2>중간 이미지 확인하기</h2>\n<p><code class=\"language-text\">docker images</code> 명령으로 <code class=\"language-text\">중간 이미지</code>들을 확인할 수 있습니다.</p>\n<ul>\n<li>\n<p>이 경우, <code class=\"language-text\">13b825a700e2</code>, <code class=\"language-text\">6b786cea2e12</code>, <code class=\"language-text\">c1ee277ee0b6</code> hash 값이 <code class=\"language-text\">중간 이미지</code>에 해당됩니다.</p>\n</li>\n<li>\n<p><a href=\"https://docs.docker.com/engine/reference/commandline/images/\">https://docs.docker.com/engine/reference/commandline/images/</a></p>\n</li>\n</ul>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420107-e89e0047-5f17-4f20-8481-f0bb5a69d129.png\" width=\"700\">\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker images -a\n\nREPOSITORY      TAG       IMAGE ID       CREATED       SIZE\n&lt;none&gt;          &lt;none&gt;    13b825a700e2   7 hours ago   5.59MB\n&lt;none&gt;          &lt;none&gt;    6b786cea2e12   7 hours ago   5.59MB\ndocker-layers   0.0.1     6533a93ed3e4   7 hours ago   5.59MB\n&lt;none&gt;          &lt;none&gt;    c1ee277ee0b6   7 hours ago   5.59MB\nalpine          latest    c059bfaa849c   5 weeks ago   5.59MB</code></pre></div>\n<p>생성된 이미지 아이디들은, <code class=\"language-text\">imagedb</code> 디렉토리에서도 확인하실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/image/overlay2/imagedb/content/sha256\n\n13b825a700e28b5643ec821757ec0a2b21f0531ec1bdbda6a33c2c8cd7afc4f9\n6533a93ed3e44b5cd1a2b915508dfeb99b54660405a33db5fce4593884cb64db\n6b786cea2e12553139d13f82ed9edbe3e30825b75b88d31f98eea758ed998e7f\nc059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\nc1ee277ee0b65261920b47bf211c74374706022a65dafc59d268ea17c31adfe5</code></pre></div>\n<blockquote>\n<p><code class=\"language-text\">imagedb</code> 경로에 포함된 <code class=\"language-text\">overlay2</code> 는 <code class=\"language-text\">storage driver</code> 이름이며, 이는 <code class=\"language-text\">docker info</code> 에서 확인할 수 있습니다.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://docs.docker.com/storage/storagedriver/overlayfs-driver/\">https://docs.docker.com/storage/storagedriver/overlayfs-driver/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker info\n\n...\nServer:\n ...\n Images: 5\n Server Version: 20.10.12\n Storage Driver: overlay2\n...</code></pre></div>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/info/\">https://docs.docker.com/engine/reference/commandline/info/</a></li>\n</ul>\n<h2>이미지 레이어 확인하기</h2>\n<p><code class=\"language-text\">docker image inspect</code> 명령으로, <code class=\"language-text\">이미지 레이어</code>들을 확인할 수 있습니다.</p>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/image_inspect/\">https://docs.docker.com/engine/reference/commandline/image_inspect/</a></li>\n</ul>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420106-91f804a1-d68f-436b-abf5-3c0affb11849.png\" width=\"700\">\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test sha256]# docker image inspect 6533a93ed3e4\n\n[\n    {\n        &quot;Id&quot;: &quot;sha256:6533a93ed3e44b5cd1a2b915508dfeb99b54660405a33db5fce4593884cb64db&quot;,\n        ...\n        &quot;RootFS&quot;: {\n            &quot;Type&quot;: &quot;layers&quot;,\n            &quot;Layers&quot;: [\n                &quot;sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759&quot;,\n                &quot;sha256:49825ee4ae566cd81659e8a56f3d87266bcbf8e098d6dfa6ba75b53582fdb64a&quot;,\n                &quot;sha256:35654cdb06748b1ee3474cd39ce940377b6fa47b657ea6e8f93b1f55c3af94eb&quot;\n            ]\n        },\n    }\n]</code></pre></div>\n<p><code class=\"language-text\">RootFS.Layers</code> 에 포함된 hash 값들로, <code class=\"language-text\">이미지 레이어</code>들의 <code class=\"language-text\">데이터 디렉토리</code>를 찾을 수 있습니다.</p>\n<blockquote>\n<p>데이터 디렉토리: 이미지 레이어의 데이터가 포함된 디렉토리</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test sha256]# ls /var/lib/docker/image/overlay2/layerdb/sha256\n\n0c05e4dd4393920e9ae63e5c784f00084f12ab1414da5decaffb2da1275e1e0a\n8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\nc41ff8f7e1a31f45604ee0f6a1dbda09170df0a56c4054cb96fe81e3d344aa28</code></pre></div>\n<p>위 수행 결과에서, <code class=\"language-text\">RootFs.Layers</code> 에 포함된 hash 값(<code class=\"language-text\">8d3ac3489996...</code>)을 찾을 수 있으며,\n그 디렉토리안의 <code class=\"language-text\">cache-id</code> 파일 내용에서는, <code class=\"language-text\">데이터 디렉토리</code>를 가리키는 hash 값도 얻을 수 있습니다.</p>\n<p>아래 명령으로, <code class=\"language-text\">데이터 디렉토리</code>를 가리키는 hash 값을 기억해둡니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test sha256]# cat /var/lib/docker/image/overlay2/layerdb/sha256/8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759/cache-id\n\nd1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15</code></pre></div>\n<p>그 다음, 모든 <code class=\"language-text\">데이터 디렉토리</code>가 존재하는 <code class=\"language-text\">/var/lib/docker/overlay2</code> 디렉토리로 이동한 후, 디렉토리 목록을 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2\n253b78660d4ea67bfd01223dbf2f4b906b3ecf90dff35b21aced33b6c1890580\n73a57325ec524749fd13bb0b4e40bb129632cb95b6b8ddd2df535ba35234d55b\n73a57325ec524749fd13bb0b4e40bb129632cb95b6b8ddd2df535ba35234d55b-init\nbackingFsBlockDev\nbe6b4997511fbdb772a440a7c54fa0fae665261bec886412dffe82ddb3aa8f03\nd1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15\nl</code></pre></div>\n<p>그럼 이전에 기억해둔 hash 값(<code class=\"language-text\">d1988107ea1...</code>)으로된 디렉토리를 확인할 수 있고,\n그 디렉토리안의 <code class=\"language-text\">diff</code> 디렉토리에서, <code class=\"language-text\">alpine:latest</code> 이미지의 <code class=\"language-text\">데이터</code>들을 확인할 수 있었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2/d1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15/diff\n\nbin  dev  etc  home  lib  media  mnt  opt  proc  root  run  sbin  srv  sys tmp  usr  var</code></pre></div>\n<p>그러나, <code class=\"language-text\">8d3ac3489996...</code> hash 값을 제외한 나머지들은 일치하지 않았습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\"># RootFS.Layers\n\n...\n&quot;Layers&quot;: [\n    &quot;sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759&quot;,\n    &quot;sha256:49825ee4ae566cd81659e8a56f3d87266bcbf8e098d6dfa6ba75b53582fdb64a&quot;,\n    &quot;sha256:35654cdb06748b1ee3474cd39ce940377b6fa47b657ea6e8f93b1f55c3af94eb&quot;\n]\n...\n\n# /var/lib/docker/image/overlay2/layerdb/sha256\n\n0c05e4dd4393920e9ae63e5c784f00084f12ab1414da5decaffb2da1275e1e0a\n8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\nc41ff8f7e1a31f45604ee0f6a1dbda09170df0a56c4054cb96fe81e3d344aa28</code></pre></div>\n<p>하지만 <code class=\"language-text\">0c05e4dd4393...</code>, <code class=\"language-text\">c41ff8f7e1a3...</code> 디렉토리안의 <code class=\"language-text\">cache-id</code> 내용으로,\n<code class=\"language-text\">/var/lib/docker/overlay2</code> 디렉토리에서, 관련 <code class=\"language-text\">데이터 디렉토리</code>들을 찾을 순 있었습니다.</p>\n<h2>Union 파일 시스템</h2>\n<p>Union 파일 시스템이란? <code class=\"language-text\">여러 파일 시스템</code>들을 <code class=\"language-text\">하나의 파일 시스템</code>으로 합치는 시스템입니다.</p>\n<p>도커에서는, 이미지에 포함된 <code class=\"language-text\">이미지 레이어</code>와, 컨테이너 생성 시, 추가되는 <code class=\"language-text\">컨테이너 레이어</code>를 Union 파일 시스템을 통해, <code class=\"language-text\">하나의 파일 시스템</code>으로 인식하도록 만듭니다.</p>\n<blockquote>\n<p>컨테이너가 생성되면, 이미지에 포함된 모든 <code class=\"language-text\">이미지 레이어</code>들을 순차적으로 쌓은 후, 가장 위에 R/W 권한을 가진 <code class=\"language-text\">컨테이너 레이어</code>를 추가합니다.</p>\n</blockquote>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420892-e75d615a-73c6-40cf-8f28-a27a4ebb5dd0.png\" height=\"800\">\n<p>최종적으로, <code class=\"language-text\">이미지 레이어</code>들의 데이터와, <code class=\"language-text\">컨테이너 레이어</code>의 데이터가 <code class=\"language-text\">merged 레이어</code>에 병합되고, 컨테이너가 마운트됩니다.</p>\n<blockquote>\n<p>만약 <code class=\"language-text\">이미지 레이어</code>와 <code class=\"language-text\">컨테이너 레이어</code>에 같은 데이터가 있을 경우, <code class=\"language-text\">컨테이너 레이어</code>의 데이터가 우선 순위를 갖습니다.</p>\n</blockquote>\n<p><img src=\"https://media.vlpt.us/images/koo8624/post/ad688850-0c86-4e72-b4bd-c96f677e3c67/overlay_constructs.jpeg\" alt=\"https://media.vlpt.us/images/koo8624/post/ad688850-0c86-4e72-b4bd-c96f677e3c67/overlay_constructs.jpeg\"></p>\n<h2>파일 시스템에서, <code class=\"language-text\">이미지 레이어</code>, <code class=\"language-text\">컨테이너 레이어</code>, <code class=\"language-text\">merged 레이어</code> 확인해보기</h2>\n<p>먼저 <code class=\"language-text\">docker run</code> 명령으로, <code class=\"language-text\">docker-layer:0.0.1</code> 이미지의 컨테이너를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker images\n\nREPOSITORY      TAG       IMAGE ID       CREATED       SIZE\ndocker-layers   0.0.1     6533a93ed3e4   9 hours ago   5.59MB\nalpine          latest    c059bfaa849c   5 weeks ago   5.59MB\n\n[root@docker-test docker-layer]# docker run -it 6533a93ed3e4 sh</code></pre></div>\n<p><a href=\"https://docs.docker.com/engine/reference/commandline/run/\">https://docs.docker.com/engine/reference/commandline/run/</a></p>\n<p><code class=\"language-text\">docker ps</code> 명령으로, 생성된 컨테이너 아이디를 확인합니다.</p>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/ps/\">https://docs.docker.com/engine/reference/commandline/ps/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# docker ps\n\nCONTAINER ID   IMAGE          COMMAND   CREATED          STATUS          PORTS     NAMES\n03fc5a96eb25   6533a93ed3e4   &quot;sh&quot;      43 seconds ago   Up 42 seconds             musing_cohen</code></pre></div>\n<p><code class=\"language-text\">docker inspect</code> 명령으로, Union 파일 시스템의 <code class=\"language-text\">LowerDir</code>, <code class=\"language-text\">MergedDir</code>, <code class=\"language-text\">UpperDir</code> 에 해당하는 디렉토리들을 확인하실 수 있습니다.</p>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/inspect/\">https://docs.docker.com/engine/reference/commandline/inspect/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# docker inspect 03fc5a96eb25\n[\n    {\n        &quot;Id&quot;: &quot;03fc5a96eb2566752e28c732fe0ddd66c66d4757f2de62dac816044e5a0fadc5&quot;,\n        ...\n        &quot;GraphDriver&quot;: {\n            &quot;Data&quot;: {\n                &quot;LowerDir&quot;: &quot;/var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b-init/diff:/var/lib/docker/overlay2/253b78660d4ea67bfd01223dbf2f4b906b3ecf90dff35b21aced33b6c1890580/diff:/var/lib/docker/overlay2/be6b4997511fbdb772a440a7c54fa0fae665261bec886412dffe82ddb3aa8f03/diff:/var/lib/docker/overlay2/d1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15/diff&quot;,\n                &quot;MergedDir&quot;: &quot;/var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b/merged&quot;,\n                &quot;UpperDir&quot;: &quot;/var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b/diff&quot;,\n                &quot;WorkDir&quot;: &quot;/var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b/work&quot;\n            },\n            &quot;Name&quot;: &quot;overlay2&quot;\n        },\n        ...\n  }\n]</code></pre></div>\n<p><code class=\"language-text\">LowerDir</code> 은 <code class=\"language-text\">이미지 레이어</code>들의 <code class=\"language-text\">데이터 디렉토리</code>를 포함합니다.</p>\n<ul>\n<li>이 중, <code class=\"language-text\">/var/lib/docker/overlay2/d1988107ea10.../diff</code> 디렉토리가 <code class=\"language-text\">alpine:latest</code> 이미지의 <code class=\"language-text\">데이터 디렉토리</code>를 가리키고있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2/d1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15/diff\n\nbin  dev  etc  home  lib  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var</code></pre></div>\n<p><code class=\"language-text\">MergedDir</code> 은 <code class=\"language-text\">merged 레이어</code>의 <code class=\"language-text\">데이터 디렉토리</code>를 포함합니다.</p>\n<ul>\n<li><code class=\"language-text\">/var/lib/docker/overlay2/e4d3050e2b78.../merged</code> 디렉토리는 <code class=\"language-text\">merged 레이어</code>의 <code class=\"language-text\">데이터 디렉토리</code>를 가리키고있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b/merged\n\nbin  etc   lib    mnt  proc  run   second.txt  sys       third.txt  usr\ndev  home  media  opt  root  sbin  srv         tmp        var</code></pre></div>\n<p><code class=\"language-text\">UpperDir</code> 은 <code class=\"language-text\">컨테이너 레이어</code>의 <code class=\"language-text\">데이터 디렉토리</code>를 포함합니다.</p>\n<ul>\n<li><code class=\"language-text\">/var/lib/docker/overlay2/e4d3050e2b78.../diff</code> 디렉토리는 <code class=\"language-text\">컨테이너 레이어</code>의 <code class=\"language-text\">데이터 디렉토리</code>를 가리키고있습니다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b/diff</code></pre></div>\n<h2>이미지 레이어에, 임의의 파일을 추가한 후, 컨테이너 생성해보기</h2>\n<ul>\n<li><code class=\"language-text\">alpine:latest</code> 이미지의 <code class=\"language-text\">데이터 디렉토리</code>에 임의의 <code class=\"language-text\">test.txt</code> 파일을 추가한 후, 컨테이너를 생성하면,</li>\n</ul>\n<p>앞서 말한, <code class=\"language-text\">Union 파일 시스템 구조</code>로인해, <code class=\"language-text\">merged</code> 디렉토리에서, 추가된 <code class=\"language-text\">test.txt</code> 파일을 확인할 수 있습니다.</p>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420886-f81693d4-6fd1-487c-bbe9-6788e5611473.png\" height=\"800\">\n<p>기존 <code class=\"language-text\">merged</code> 디렉토리는, 다음과 같습니다.</p>\n<blockquote>\n<p>test.txt 파일이 존재하지않는다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2/e4d3050e2b78095d94b0905d320368a6320bb87ab13772efb4491e046d4c298b/merged\n\nbin  etc   lib    mnt  proc  run   second.txt  sys       third.txt  usr\ndev  home  media  opt  root  sbin  srv         tmp        var</code></pre></div>\n<p><code class=\"language-text\">alpine:latest</code> 이미지의 <code class=\"language-text\">데이터 디렉토리</code>에 <code class=\"language-text\">test.txt</code> 파일을 추가합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">echo test &gt; /var/lib/docker/overlay2/d1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15/diff/test.txt</code></pre></div>\n<p><code class=\"language-text\">docker-layers:0.0.1</code> 이미지로 컨테이너를 다시 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">docker run -it 6533a93ed3e4 sh</code></pre></div>\n<p><code class=\"language-text\">docker ps</code> 명령으로 새로운 <code class=\"language-text\">컨테이너의 아이디</code>를 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# docker ps\n\nCONTAINER ID   IMAGE          COMMAND   CREATED         STATUS         PORTS     NAMES\ne20f7b593716   6533a93ed3e4   &quot;sh&quot;      6 seconds ago   Up 5 seconds             inspiring_dhawan</code></pre></div>\n<p><code class=\"language-text\">docker inspect</code> 명령으로, <code class=\"language-text\">merged 레이어</code>의 <code class=\"language-text\">데이터 디렉토리</code>를 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# docker inspect e20f7b593716\n[\n    {\n      ...\n      &quot;GraphDriver&quot;: {\n          &quot;Data&quot;: {\n              &quot;LowerDir&quot;: &quot;/var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3-init/diff:/var/lib/docker/overlay2/253b78660d4ea67bfd01223dbf2f4b906b3ecf90dff35b21aced33b6c1890580/diff:/var/lib/docker/overlay2/be6b4997511fbdb772a440a7c54fa0fae665261bec886412dffe82ddb3aa8f03/diff:/var/lib/docker/overlay2/d1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15/diff&quot;,\n              &quot;MergedDir&quot;: &quot;/var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3/merged&quot;,\n              &quot;UpperDir&quot;: &quot;/var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3/diff&quot;,\n              &quot;WorkDir&quot;: &quot;/var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3/work&quot;\n          },\n          &quot;Name&quot;: &quot;overlay2&quot;\n      },\n      ...\n    }\n]</code></pre></div>\n<p><code class=\"language-text\">merged</code> 디렉토리를 확인하면, <code class=\"language-text\">alpine:latest</code> 이미지 레이어에 추가된 <code class=\"language-text\">test.txt</code> 파일을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3/merged\n\nbin  etc   lib    mnt  proc  run   second.txt  sys       third.txt  usr\ndev  home  media  opt  root  sbin  srv         test.txt  tmp        var</code></pre></div>\n<h2>추가된 merged 디렉토리는, 컨테이너 중지 시, 삭제됩니다.</h2>\n<p><code class=\"language-text\">docker stop</code> 명령으로 <code class=\"language-text\">e20f7b593716</code> 컨테이너를 중지합니다.</p>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/stop/\">https://docs.docker.com/engine/reference/commandline/stop/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# docker stop e20f7b593716 &amp;&amp; ls /var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3\n\ne20f7b593716\ndiff  link  lower  work</code></pre></div>\n<blockquote>\n<p>merged 디렉토리가 삭제되었습니다.</p>\n</blockquote>\n<h2>컨테이너가 삭제되면, 컨테이너 레이어 및 merged 디렉토리가 삭제됩니다.</h2>\n<p><code class=\"language-text\">docker rm</code> 명령으로 <code class=\"language-text\">e20f7b593716</code> 컨테이너를 삭제합니다.</p>\n<ul>\n<li><a href=\"https://docs.docker.com/engine/reference/commandline/rm\">https://docs.docker.com/engine/reference/commandline/rm</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# docker rm -f e20f7b593716 &amp;&amp; ls /var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3\n\ne20f7b593716\nls: cannot access /var/lib/docker/overlay2/020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3: No such file or directory</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test overlay2]# ls /var/lib/docker/overlay2\n253b78660d4ea67bfd01223dbf2f4b906b3ecf90dff35b21aced33b6c1890580\n73a57325ec524749fd13bb0b4e40bb129632cb95b6b8ddd2df535ba35234d55b\n73a57325ec524749fd13bb0b4e40bb129632cb95b6b8ddd2df535ba35234d55b-init\nbackingFsBlockDev\nbe6b4997511fbdb772a440a7c54fa0fae665261bec886412dffe82ddb3aa8f03\nd1988107ea10cdd0abd2f8b23dc78e616ef8e5b4c04ae0f81b9f7dd9efc54a15\nl</code></pre></div>\n<p>이전에 존재하던, <code class=\"language-text\">컨테이너 관련</code> 두 디렉토리가 삭제되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3\n020d8fd7aa9ec14fc8e6298631afc9a048372d43b23c54e17c93490eda0c22a3-init</code></pre></div>\n<blockquote>\n<p>이중, 020d8fd7aa9e…-init 은 컨테이너를 초기화를 위한 레이어이다.</p>\n</blockquote>","frontmatter":{"title":"도커 중간 이미지 및 레이어","date":"January 09, 2022","description":""}},"previous":{"fields":{"slug":"/docker-image-layer-and-chain/"},"frontmatter":{"title":"도커 이미지 레이어 및 체인"}},"next":{"fields":{"slug":"/docker-build-cache/"},"frontmatter":{"title":"도커 빌드 캐시"}}},"pageContext":{"id":"a7d6fdb9-c1cf-5298-8090-040e371c1492","previousPostId":"c235fed8-7558-5877-9a3b-fb9777b78a82","nextPostId":"9d166dc1-f238-596d-9436-e6c37c74ca73"}},
    "staticQueryHashes": ["2841359383","3257411868"]}