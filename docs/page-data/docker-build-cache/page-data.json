{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/docker-build-cache/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Mohwa Blog"}},"markdownRemark":{"id":"9d166dc1-f238-596d-9436-e6c37c74ca73","excerpt":"이 글을 더 정확히 이해하기위해, 도커 중간 이미지 및 레이어를 먼저 읽어보시는것을 추천드립니다. 테스트 환경 OS: centos/7 Docker Version: 20.10.12 호스트 OS 및 Docker Version 에 따라, 이 글의 가 다를 수 있습니다. Where is…","html":"<p>이 글을 더 정확히 이해하기위해, <a href=\"/docker-intermediate-image\">도커 중간 이미지 및 레이어</a>를 먼저 읽어보시는것을 추천드립니다.</p>\n<p>테스트 환경</p>\n<ul>\n<li>\n<p>OS: centos/7</p>\n</li>\n<li>\n<p>Docker Version: 20.10.12</p>\n<blockquote>\n<p>호스트 OS 및 Docker Version 에 따라, 이 글의 <code class=\"language-text\">테스트 결과</code>가 다를 수 있습니다.</p>\n</blockquote>\n<ul>\n<li><a href=\"https://stackoverflow.com/questions/38532483/where-is-var-lib-docker-on-mac-os-x\">Where is /var/lib/docker on Mac/OS X</a></li>\n<li><a href=\"https://memostack.tistory.com/3\">Mac 환경의 Docker 는 /var/lib/docker가 없다</a></li>\n</ul>\n</li>\n<li>\n<p>도커 <code class=\"language-text\">이미지</code> 및 <code class=\"language-text\">컨테이너</code>가 초기화되어있습니다.</p>\n</li>\n</ul>\n<h2>먼저, Dockerfile 생성합니다.</h2>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:latest</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo first</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> ./third.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"echo\"</span>, <span class=\"token string\">\"fourth\"</span>]</span></code></pre></div>\n<h2>첫 번째 이미지를 생성한 경우</h2>\n<p>우선 생성된 모든 <code class=\"language-text\">이미지</code>들이 저장되는 공간을 확인해보면, 모두 비어있는것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker]# ls /var/lib/docker/image/overlay2/imagedb/content/sha256</code></pre></div>\n<p><code class=\"language-text\">docker build</code> 명령으로, <code class=\"language-text\">docker-layers:0.0.1</code> 이미지를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker build -t docker-layers:0.0.1 .\n\nSending build context to Docker daemon  4.096kB\nStep 1/5 : FROM alpine:latest\nlatest: Pulling from library/alpine\n59bf1c3509f3: Pull complete\nDigest: sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300\nStatus: Downloaded newer image for alpine:latest\n ---&gt; c059bfaa849c\nStep 2/5 : RUN echo first\n ---&gt; Running in 24aaa5617f83\nfirst\nRemoving intermediate container 24aaa5617f83\n ---&gt; 3a18fe3979f0\nStep 3/5 : COPY ./second.txt .\n ---&gt; 6da5ddb808b7\nStep 4/5 : ADD ./third.txt .\n ---&gt; a537bad7aa2b\nStep 5/5 : CMD [&quot;echo&quot;, &quot;fourth&quot;]\n ---&gt; Running in da1be8fb3579\nRemoving intermediate container da1be8fb3579\n ---&gt; 17be1d9b9c5e\nSuccessfully built 17be1d9b9c5e\nSuccessfully tagged docker-layers:0.0.1</code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420099-ad4170e4-2f5d-4aa1-a2b5-9244a1a0e767.png\" height=\"800\">\n<blockquote>\n<p>캐시된 <code class=\"language-text\">이미지</code>들이 존재하지않는것을, 한번 더 확인할 수 있습니다.</p>\n</blockquote>\n<p>이제 <code class=\"language-text\">docker-layers:0.0.1</code> 의 <code class=\"language-text\">이미지</code>들이 생성된것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker]# ls /var/lib/docker/image/overlay2/imagedb/content/sha256\n\nc059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\n3a18fe3979f0ba52526965cfa3fbfa44e9cb1a01fac9d8df3f8dea9a5b5cc895\n6da5ddb808b77a5e7f64bf7c134bdce69e1eb67c1c4afe4f8d0a4a0d1edfb1c2\na537bad7aa2b21ea19666a67cc8ee66ffa151128ed07f20c17f1584e595ff9ca\n17be1d9b9c5ea8e703fabf23c45c374e79486f272aa552247b7e9cd6a5e97af5</code></pre></div>\n<h2>두번째 이미지를 생성한 경우</h2>\n<p>먼저 <code class=\"language-text\">/var/lib/docker/image/overlay2/imagedb/content/sha256</code> 디렉토리를 확인해보면, 이전 <code class=\"language-text\">docker-layers:0.0.1</code> 이미지로부터\n생성된 <code class=\"language-text\">이미지</code>들을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker]# ls /var/lib/docker/image/overlay2/imagedb/content/sha256\n\nc059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\n3a18fe3979f0ba52526965cfa3fbfa44e9cb1a01fac9d8df3f8dea9a5b5cc895\n6da5ddb808b77a5e7f64bf7c134bdce69e1eb67c1c4afe4f8d0a4a0d1edfb1c2\na537bad7aa2b21ea19666a67cc8ee66ffa151128ed07f20c17f1584e595ff9ca\n17be1d9b9c5ea8e703fabf23c45c374e79486f272aa552247b7e9cd6a5e97af5</code></pre></div>\n<p><code class=\"language-text\">docker build</code> 명령으로, <code class=\"language-text\">docker-layer:0.0.2</code> 이미지를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker build -t docker-layers:0.0.2 .\n\nSending build context to Docker daemon  4.096kB\nStep 1/5 : FROM alpine:latest\n ---&gt; c059bfaa849c\nStep 2/5 : RUN echo first\n ---&gt; Using cache\n ---&gt; 3a18fe3979f0\nStep 3/5 : COPY ./second.txt .\n ---&gt; Using cache\n ---&gt; 6da5ddb808b7\nStep 4/5 : ADD ./third.txt .\n ---&gt; Using cache\n ---&gt; a537bad7aa2b\nStep 5/5 : CMD [&quot;echo&quot;, &quot;fourth&quot;]\n ---&gt; Using cache\n ---&gt; 17be1d9b9c5e\nSuccessfully built 17be1d9b9c5e\nSuccessfully tagged docker-layers:0.0.2</code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420069-71291d1d-0d57-4b1f-bca2-ca9e4f2a99ec.png\" height=\"800\">\n<blockquote>\n<p><code class=\"language-text\">docker-layers:0.0.1</code> 로 부터 캐시된 <code class=\"language-text\">이미지</code>들이, <code class=\"language-text\">재 활용</code>된것을 확인할 수 있습니다.</p>\n</blockquote>\n<h2><code class=\"language-text\">Dockerfile</code> 내용을 변경한 후, 이미지를 생성한 경우</h2>\n<p><code class=\"language-text\">/var/lib/docker/image/overlay2/imagedb/content/sha256</code> 디렉토리를 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test sha256]# ls /var/lib/docker/image/overlay2/imagedb/content/sha256\n\nc059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\n3a18fe3979f0ba52526965cfa3fbfa44e9cb1a01fac9d8df3f8dea9a5b5cc895\n6da5ddb808b77a5e7f64bf7c134bdce69e1eb67c1c4afe4f8d0a4a0d1edfb1c2\na537bad7aa2b21ea19666a67cc8ee66ffa151128ed07f20c17f1584e595ff9ca\n17be1d9b9c5ea8e703fabf23c45c374e79486f272aa552247b7e9cd6a5e97af5</code></pre></div>\n<p>기존 <code class=\"language-text\">Dockerfile</code> 내용을 일부 수정합니다.</p>\n<blockquote>\n<p>기존 <code class=\"language-text\">이미지 체인</code>에 변화를 주기위해, 컨테이너 <code class=\"language-text\">파일 시스템</code>에 영향을 주는 새로운 <code class=\"language-text\">COPY</code> 명령(<code class=\"language-text\">COPY ./new_second.txt .</code>)을 추가합니다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:latest</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo first</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./new_second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> ./third.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"echo\"</span>, <span class=\"token string\">\"fourth\"</span>]</span></code></pre></div>\n<p>위 <code class=\"language-text\">Dockerfile</code> 에서 COPY 될 <code class=\"language-text\">new_second.txt</code> 파일을 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# echo new_second &gt; new_second.txt &amp;&amp; ls\n\nDockerfile  new_second.txt  second.txt  third.txt</code></pre></div>\n<p><code class=\"language-text\">docker build</code> 명령으로, <code class=\"language-text\">docker-layers:0.0.3</code> 이미지를 생성합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test docker-layer]# docker build -t docker-layers:0.0.3 .\n\nSending build context to Docker daemon   5.12kB\nStep 1/6 : FROM alpine:latest\n ---&gt; c059bfaa849c\nStep 2/6 : RUN echo first\n ---&gt; Using cache\n ---&gt; 3a18fe3979f0\nStep 3/6 : COPY ./second.txt .\n ---&gt; Using cache\n ---&gt; 6da5ddb808b7\nStep 4/6 : COPY ./new_second.txt .\n ---&gt; c3f400b3c3b4\nStep 5/6 : ADD ./third.txt .\n ---&gt; b089e6d887fe\nStep 6/6 : CMD [&quot;echo&quot;, &quot;fourth&quot;]\n ---&gt; Running in 25d40b3f392a\nRemoving intermediate container 25d40b3f392a\n ---&gt; 2e50e1c93943\nSuccessfully built 2e50e1c93943\nSuccessfully tagged docker-layers:0.0.3</code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420089-aaebece2-e80f-4046-982b-a7230009c3da.png\" height=\"800\">\n<blockquote>\n<p>일부 이미지(<code class=\"language-text\">c059bfaa849c</code> ~ <code class=\"language-text\">6da5ddb808b7</code>)들만 <code class=\"language-text\">재 활용</code>되었고, 추가된 <code class=\"language-text\">COPY</code> 명령과,</p>\n</blockquote>\n<p>그 뒤의 모든 명령들이 새로운 <code class=\"language-text\">이미지</code>로 추가되었습니다.</p>\n<p>다시 <code class=\"language-text\">/var/lib/docker/image/overlay2/imagedb/content/sha256</code> 디렉토리를 확인합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test ~]# ls /var/lib/docker/image/overlay2/imagedb/content/sha256\n\nc059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\n3a18fe3979f0ba52526965cfa3fbfa44e9cb1a01fac9d8df3f8dea9a5b5cc895\n6da5ddb808b77a5e7f64bf7c134bdce69e1eb67c1c4afe4f8d0a4a0d1edfb1c2\nc3f400b3c3b4a725e4bf150ce314a3ba006fb622ea3de26c04a5697dd3184327\nb089e6d887fe05bada5545875ec3d97d55f5b41c4cba260a9c64b66fa30cddf8\n2e50e1c939430406a23641225d384c1da7b9b7699f3a08b02596d4214ed1cd3d\na537bad7aa2b21ea19666a67cc8ee66ffa151128ed07f20c17f1584e595ff9ca\n17be1d9b9c5ea8e703fabf23c45c374e79486f272aa552247b7e9cd6a5e97af5</code></pre></div>\n<p>이전 <code class=\"language-text\">이미지</code> 목록에,</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">c059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\n3a18fe3979f0ba52526965cfa3fbfa44e9cb1a01fac9d8df3f8dea9a5b5cc895\n6da5ddb808b77a5e7f64bf7c134bdce69e1eb67c1c4afe4f8d0a4a0d1edfb1c2\na537bad7aa2b21ea19666a67cc8ee66ffa151128ed07f20c17f1584e595ff9ca\n17be1d9b9c5ea8e703fabf23c45c374e79486f272aa552247b7e9cd6a5e97af5</code></pre></div>\n<p>새로운 <code class=\"language-text\">이미지</code>들이 더해진것을 확인할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">c3f400b3c3b4a725e4bf150ce314a3ba006fb622ea3de26c04a5697dd3184327\nb089e6d887fe05bada5545875ec3d97d55f5b41c4cba260a9c64b66fa30cddf8\n2e50e1c939430406a23641225d384c1da7b9b7699f3a08b02596d4214ed1cd3d</code></pre></div>\n<h2>캐시된 이미지가 무효화된 이유</h2>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420089-aaebece2-e80f-4046-982b-a7230009c3da.png\" height=\"800\">\n<p><a href=\"\">이미지 레이어 체인</a>의 <code class=\"language-text\">부모/자식</code> 관계로인해,\n추가된 이미지(<code class=\"language-text\">new_second.txt</code>) 이후의 이미지들이 바라보던 <code class=\"language-text\">parent</code> 의 변경과함께,\n새로운 이미지들이 추가되었고, 그로인해, 이전에 캐시된 이미지들을 사용할 수 없게된 것이다.</p>\n<blockquote>\n<p>즉, 변경된 <code class=\"language-text\">명령</code> 이후의 <code class=\"language-text\">모든 명령</code>들은, 캐시된 <code class=\"language-text\">이미지</code>를 사용하지않고, 새로운 <code class=\"language-text\">이미지</code>를 만들어냅니다.</p>\n</blockquote>\n<p>변경전 <code class=\"language-text\">Dockerfile</code></p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:latest</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo first</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> ./third.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"echo\"</span>, <span class=\"token string\">\"fourth\"</span>] </span></code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/11391606/148461729-44228c21-9209-4ac8-a30c-46b7facff7c7.png\" height=\"800\">\n<p>변경 후 <code class=\"language-text\">Dockerfile</code></p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"><span class=\"token instruction\"><span class=\"token keyword\">FROM</span> alpine:latest</span>\n<span class=\"token instruction\"><span class=\"token keyword\">RUN</span> echo first</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">COPY</span> ./new_second.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">ADD</span> ./third.txt .</span>\n<span class=\"token instruction\"><span class=\"token keyword\">CMD</span> [<span class=\"token string\">\"echo\"</span>, <span class=\"token string\">\"fourth\"</span>]</span></code></pre></div>\n<img src=\"https://user-images.githubusercontent.com/11391606/148420094-f817a05e-8d11-48d2-8ce2-04d90823ba0e.png\" height=\"800\">\n<p><code class=\"language-text\">/var/lib/docker/image/overlay2/imagedb/metadata/sha256</code> 목록입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shellscript\"><pre class=\"language-shellscript\"><code class=\"language-shellscript\">[root@docker-test sha256]# ls /var/lib/docker/image/overlay2/imagedb/metadata/sha256\n\n# 기존 CMD [&quot;echo&quot;, &quot;fourth&quot;] 명령\n17be1d9b9c5ea8e703fabf23c45c374e79486f272aa552247b7e9cd6a5e97af5\n\n# 새로운 CMD [&quot;echo&quot;, &quot;fourth&quot;] 명령\n2e50e1c939430406a23641225d384c1da7b9b7699f3a08b02596d4214ed1cd3d\n\n# 기존 RUN echo first 명령\n3a18fe3979f0ba52526965cfa3fbfa44e9cb1a01fac9d8df3f8dea9a5b5cc895\n\n# 기존 COPY ./second.txt . 명령\n6da5ddb808b77a5e7f64bf7c134bdce69e1eb67c1c4afe4f8d0a4a0d1edfb1c2\n\n# 기존 ADD ./third.txt . 명령\na537bad7aa2b21ea19666a67cc8ee66ffa151128ed07f20c17f1584e595ff9ca\n\n# 새로운 ADD ./third.txt . 명령\nb089e6d887fe05bada5545875ec3d97d55f5b41c4cba260a9c64b66fa30cddf8\n\n# 새로운 COPY ./new_second.txt . 명령\nc3f400b3c3b4a725e4bf150ce314a3ba006fb622ea3de26c04a5697dd3184327</code></pre></div>","frontmatter":{"title":"도커 빌드 캐시","date":"January 09, 2022","description":""}},"previous":{"fields":{"slug":"/2018-07-27-coding-technique/"},"frontmatter":{"title":"코딩을 지탱하는 기술(1 ~ 3장)"}},"next":{"fields":{"slug":"/docker-image-layer-and-chain/"},"frontmatter":{"title":"도커 이미지 레이어 및 체인"}}},"pageContext":{"id":"9d166dc1-f238-596d-9436-e6c37c74ca73","previousPostId":"96cdeb1b-e628-515d-91dc-203d68e81ebc","nextPostId":"c235fed8-7558-5877-9a3b-fb9777b78a82"}},
    "staticQueryHashes": ["2841359383","3257411868"]}