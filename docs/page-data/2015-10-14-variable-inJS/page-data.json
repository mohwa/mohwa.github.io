{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2015-10-14-variable-inJS/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Mohwa Blog"}},"markdownRemark":{"id":"71826013-474c-5119-b8f0-be88ed8cc465","excerpt":"ECMAScript 에서 말하는 변수는 오직 var 키워드를(또는 변수 선언식을) 통해서만 선언된다. 즉 var 키워드가(또는 변수 선언식이) 생략된 y 속성은, 변수가 아닌 VO 의 속성일 뿐이며, Execution Context 진입 시, VO…","html":"<ul>\n<li>\n<p><strong>ECMAScript</strong> 에서 말하는 <strong>변수</strong>는 오직 <span style=\"color:#6298c1\">var</span> 키워드를(또는 변수 선언식을) 통해서만 <strong>선언</strong>된다.</p>\n<ul>\n<li>\n<p>즉 <span style=\"color:#6298c1\">var</span> 키워드가(또는 변수 선언식이) 생략된 y 속성은, <u><strong>변수가 아닌</strong> <span style=\"color:#c11f1f\">VO</span> 의 <strong>속성</strong>일 뿐이며</u>, Execution Context 진입 시, <span style=\"color:#c11f1f\">VO</span> 의 새로운 <strong>속성</strong>으로 추가되지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global Execution Context</span>\n\n<span class=\"token comment\">// var 키워드를(변수 선언식을) 통해 변수가 선언되었다.</span>\n<span class=\"token comment\">// Execution Context 진입 시 VO 의 새로운 속성으로 추가되며, undefined 로 초기화된다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n\n<span class=\"token comment\">// var 키워드를 통한 변수 선언</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// Execution Context 진입 시 VO 의 새로운 속성으로 추가되지않으며, 그에 따라 런타임 에러가 발생한다.</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// y is not defined</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token comment\">// var 키워드가(변수 선언식이) 생략된 y 속성</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>Execution Context 진입 시 <span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span>\n      <span class=\"token comment\">// y 속성은 execution context 진입 시 초기화되지 않는다.</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><strong>실행 코드 처리 후</strong>에는 <span style=\"color:#c11f1f\">VO</span> 의 새로운 <strong>속성</strong>으로 추가된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global Execution Context</span>\n\n<span class=\"token comment\">// Execution Context 진입 시 VO 의 새로운 속성으로 추가되지않는다.</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 실행 코드</span>\n\n<span class=\"token comment\">// 실행 코드 처리 후에는 VO 의 속성으로 추가된다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></code></pre></div>\n</li>\n<li>\n<p><strong>변수 선언식</strong>을 통해, 생성된 <strong>변수</strong>는 <u>non-configurable</u>(or <strong>DontDelete</strong>) <strong>속성</strong>으로 정의되며, <span style=\"color:#c11f1f\">delete</span> 연산자를 통해 <strong>삭제</strong>되지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global Execution Context</span>\n\n<span class=\"token comment\">// var 키워드를 통한 x 변수는 non-configurable 속성을 가지고있다.</span>\n<span class=\"token comment\">// configurable = false</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// var 키워드가 생략된 y 속성은 configurable 속성을 가지고있다.</span>\n<span class=\"token comment\">// configurable = true</span>\ny <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// Object {value: 1, writable: true, enumerable: true, configurable: false}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Object {value: 2, writable: true, enumerable: true, configurable: true}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'y'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// delete 연산자를 통해 x 변수를 삭제한다.</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// delete 연산자를 통해 y 속성을 삭제한다.</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// x 변수는 non-configurable 속성으로 delete 연산자를 통해, 삭제되지 않는다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token comment\">// y 속성은 configurable 속성으로 delete 연산자를 통해, 삭제된다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#6298c1\">eval</span> 함수를 통해, 선언된 <strong>변수</strong>는 <strong>변수</strong>로 선언되지 않는다.(<span style=\"color:#c11f1f\">VO</span> 의 <strong>속성</strong>으로 추가되며, <strong>configuration</strong> 속성으로 정의된다)</p>\n<ul>\n<li>\n<p>변수가 아닌, <span style=\"color:#c11f1f\">VO</span> 의 <strong>속성</strong>으로 추가된다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// global Execution Context</span>\n\n<span class=\"token comment\">// calling context 는 global Execution Context 를 가리킨다.</span>\n\n<span class=\"token comment\">// eval 함수를 통해 x 변수를 생성한다.</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'var x = 1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 정의된 객체 속성을 나열한다.(x 속성은 configurable 속성으로 정의되어있다)</span>\n\n<span class=\"token comment\">// Object {value: 1, writable: true, enumerable: true, configurable: true}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">getOwnPropertyDescriptor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'x'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token comment\">// delete 연산자를 통해 x 속성을 삭제한다.</span>\n<span class=\"token keyword\">delete</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 변수가 아닌, VO 의 x 속성은 delete 연산자를 통해 삭제된다.</span>\n<span class=\"token comment\">// 즉 configurable 속성으로 정의되었으며, 변수로 선언되지 않았다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n</code></pre></div>\n</li>\n<li>\n<p>Function Execution Context 의 eval 함수</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n\n    <span class=\"token comment\">// calling context 는 function execution context 를 가리킨다.</span>\n\n    <span class=\"token comment\">// x 지역 변수를 선언한다.</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// eval 함수를 통해, 변수를 선언한다.</span>\n    <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'var y = 2;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n    <span class=\"token comment\">// y 속성은 calling context 내부 VO 에 추가된다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n\n    <span class=\"token comment\">// x 변수를 delete 연산자를 통해 삭제한다.</span>\n    <span class=\"token keyword\">delete</span> x<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// y 속성을 delete 연산자를 통해 삭제한다.</span>\n    <span class=\"token keyword\">delete</span> y<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// x 변수는 delete 연산자를 통해, 삭제되지 않는다.</span>\n    <span class=\"token comment\">// 즉 x 변수는 변수로 선언되었다.(DontDelete 속성)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n    <span class=\"token comment\">// delete 연산자를 통해, 해당 속성이 삭제되었다.</span>\n    <span class=\"token comment\">// 즉 y 속성은 변수로 선언되지 않았다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uncaught ReferenceError: y is not defined</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  evalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                \n  <span class=\"token comment\">// 호출 문맥</span>\n  callingContext<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>            \n      <span class=\"token comment\">// 실행 코드 처리 후, x 변수에 1이 할당된다.      </span>\n      x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// --> delete 연산자를 통해 삭제되지 않는다. --> 1</span>\n      <span class=\"token comment\">// eval 함수로 전달된 실행 코드로 인해, calling context 내부 VO 가 영향받는다.</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">2</span> <span class=\"token comment\">// --> delete 연산자를 통해 삭제된다. --> y is not defined</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>참고 URL</h2>\n<ul>\n<li>\n<p><a href=\"http://mohwa.github.io/blog/javascript/2015/10/14/vo-inJS/\">Variable Object in JS</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Statements/var\">var</a></p>\n</li>\n<li>\n<p><a href=\"http://huns.me/development/189\">ECMA-262-3 in detail. Chapter 2. Variable object 번역 글</a></p>\n</li>\n<li>\n<p><a href=\"https://msdn.microsoft.com/en-us/library/br230269(v=vs.94).aspx\">Strict Mode (JavaScript)</a></p>\n</li>\n<li>\n<p><a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Obsolete_Pages/Core_JavaScript_1.5_Guide/Operators/Special_Operators#delete\">Special Operators</a></p>\n</li>\n</ul>","frontmatter":{"title":"Variable in JS","date":"October 14, 2015","description":"JavaScript 변수"}},"previous":{"fields":{"slug":"/2015-10-13-execution-context-inJS/"},"frontmatter":{"title":"Execution Context in JS"}},"next":{"fields":{"slug":"/2015-10-14-this-inJS/"},"frontmatter":{"title":"This in JS"}}},"pageContext":{"id":"71826013-474c-5119-b8f0-be88ed8cc465","previousPostId":"8d28a6ff-4f0e-582d-bff2-ae2da0688bf3","nextPostId":"818b3dc9-0786-54e2-8d5b-34b9f1cb575d"}},
    "staticQueryHashes": ["2841359383","3257411868"]}