{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/2015-10-11-scope-chain-inJS/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Mohwa Blog"}},"markdownRemark":{"id":"bd389aae-3ed9-5fcf-9f74-86c239e2648b","excerpt":"Execution Context 와 ECStack 내부 ECStack 내부 Global Execution Context 의 Scope Chain Global Execution Context 내부에 생성되는 Scope Chain 은 globalExecutionContext.VO…","html":"<ul>\n<li>\n<p>Execution Context 와 <span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  \n  <span class=\"token comment\">// global execution context</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    \n    <span class=\"token comment\">// A 함수 선언식 내부</span>\n    <span class=\"token comment\">// function execution context</span>\n    <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AO.x</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n      <span class=\"token comment\">// B 함수 선언식 내부</span>\n      <span class=\"token comment\">// active function execution context</span>\n      <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AO.y</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AO.B() == null.B()</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// this.A();</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// B function execution context</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token constant\">B</span><span class=\"token operator\">></span> activeFunctionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>     \n      <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                         \n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// A function execution context</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>          \n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// global execution context</span>\n  globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>Global Execution Context 의 <strong>Scope Chain</strong></p>\n<ul>\n<li>\n<p>Global Execution Context 내부에 생성되는 <strong>Scope Chain</strong> 은 globalExecutionContext.VO 만 <strong>포함</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  globalExecutionContext<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token operator\">...</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>함수 생명 주기</strong> 와 Function Execution Context 의 <strong>Scope Chain</strong></p>\n<ul>\n<li>\n<p>함수 생명 주기는 <strong>함수 생성</strong>과 <strong>함수 호출</strong>로 나눌 수 있다.</p>\n</li>\n<li>\n<p>함수 생성</p>\n<ul>\n<li>\n<p><strong>함수 생성 시</strong> [[Scope]] property 가 <strong>생성</strong>된다.<p></p>\n</li>\n<li>\n<p>[[Scope]] property 는 직접적인 접근이 불가능하며, <strong>초기화</strong>된 값은 변경되지 않는다.<p></p>\n</li>\n<li>\n<p>[[Scope]] property 는 해당 Function Execution Context 상위에 있는 <u>모든 부모 계층의 <span style=\"color:#c11f1f\">VO</span> 를 갖는다.</u><p></p>\n</li>\n<li>\n<p>A 함수를 선언한다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">함수 생성</span> 시 함수 객체 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>Scope<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// A 함수는 [[Scope]] property 를 통해 global execution context 의 VO 를 갖는다.</span>\n    globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>함수 내부에 또 다른 함수 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token comment\">// 변수 선언 VO.x</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// function execution context</span>\n  <span class=\"token comment\">// 변수 선언 AO.y</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n</li>\n<li>\n<p>각 함수 객체 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>Scope<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// A 함수는 global execution context 의 VO 를 갖는다.</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>Scope<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// B 함수는 global execution context 의 VO 와 부모 함수인 A 함수의 AO(VO)를 갖는다.</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n</code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>함수 호출</p>\n<ul>\n<li>\n<p>함수 호출 시, Function Execution Context 내부에 <strong>Scope Chain</strong> 이 추가된다.<p></p>\n</li>\n<li>\n<p><strong>Scope Chain</strong> 은 함수 [[Scope]] property 를 그대로 가져가 <strong>초기화</strong>되며, Function Execution Context 내부 <span style=\"color:#c11f1f\">AO</span>(VO)는 <strong>Scope Chain</strong> 의 <u><strong>가장 앞</strong>에 추가된다.</u></p>\n<p><img src=\"http://figures.oreilly.com/tagoreillycom20090601oreillybooks300541I_book_d1e1/figs/I_mediaobject7_d1e6895-web.png\" alt=\"\"></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n  <span class=\"token comment\">// global execution context</span>\n\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n\n    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// call A function object</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n  <span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// A function execution context</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// 함수 호출 시, 생성된 AO 는 Scope Chain 의 가장 앞(ScopeChain[0])에 추가되며, 식별자 검색 시 가장 먼저 검색된다.</span>\n        <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                  \n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\t\t\t\t\t\t\t\t\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n      <span class=\"token punctuation\">]</span>                  \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>식별자 해석 과정</p>\n<ul>\n<li>\n<p><strong>식별자</strong> 검색 순서는 <u><strong>Scope Chain</strong> 의 가장 <strong>바닥</strong>(ScopeChain[0])에서부터</u>, <u>가장 <strong>상위</strong>(ScopeChain[scope.length]) 까지</u> 검색 후, 그 값을 반환한다.</p>\n</li>\n<li>\n<p>즉, 이와같은 <strong>검색 매커니즘</strong>에 의해, 해당 <strong>함수</strong>가 가진 <span style=\"color:#c11f1f\">AO</span>(VO) 의 속성을 가장 빠르게 <strong>접근</strong>할 수 있으며, Global Execution Context 내부 <span style=\"color:#c11f1f\">VO</span> 의 속성에 <strong>접근</strong>하는것이 가장 느린것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n  <span class=\"token comment\">// global execution context</span>\n\n  <span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n\n    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// functionExecutionContext.scopeChain.globalExecutionContext.VO.x                </span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n    <span class=\"token comment\">// functionExecutionContext.scopeChain.AO.y</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                  \n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n          <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        x<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\t\t\t\t\t\t\t\t\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n      <span class=\"token punctuation\">]</span>                  \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>만약, 각 Execution Context 에 선언된 <strong>식별자 이름</strong>이 같은 경우, 위에서 언급한 <strong>Scope Chain</strong> 의 <strong>검색 순서</strong>로 해당 값이 정해지게 된다.</p>\n</li>\n<li>\n<p>BFunctionExecutionContext.AO.y</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// function execution context</span>\n  \n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// active function execution context</span>\n\n    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token comment\">// BFunctionExecutionContext.AO.y</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AO.B() === null.B();</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>AFunctionExecutionContext.AO.y</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n  <span class=\"token comment\">// global execution context</span>\n  \n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n\n    <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n      <span class=\"token comment\">// active function execution context</span>\n  \n      <span class=\"token comment\">// B 함수에 선언된 y 변수를 삭제한다.</span>\n      <span class=\"token comment\">// var y = 3;</span>\n      <span class=\"token comment\">// AFunctionExecutionContext.AO.y</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AO.B() === null.B();</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>globalExecutionContext.VO.y</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n  <span class=\"token comment\">// global execution context</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n    \n    <span class=\"token comment\">// A 함수에 선언된 y 변수를 삭제한다.</span>\n    <span class=\"token comment\">// var y = 2;</span>\n\n    <span class=\"token keyword\">function</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n      <span class=\"token comment\">// active function execution context</span>\n      <span class=\"token comment\">// B 함수에 선언된 y 변수를 삭제한다.</span>\n      <span class=\"token comment\">// var y = 3;</span>\n\n      <span class=\"token comment\">// globalExecutionContext.VO.y</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// AO.B() === null.B();</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n\n  <span class=\"token operator\">&lt;</span><span class=\"token constant\">B</span><span class=\"token operator\">></span> activeFunctionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">3</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                \n      <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                \n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token constant\">A</span><span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">B</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                \n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        y<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      y<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n    <span class=\"token punctuation\">]</span>                \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>또 다른 Scope Chain 예</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num1<span class=\"token punctuation\">,</span> num2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// function execution context</span>\n    \n  <span class=\"token comment\">// result 변수는 undefined 로 초기화된다.</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n  \n  <span class=\"token comment\">// functionExecution.AO.num1</span>\n  <span class=\"token comment\">// functionExecution.AO.num2</span>\n  <span class=\"token keyword\">return</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token comment\">// 실행 코드 처리 후 result 변수에 15 가 할당된다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 15</span></code></pre></div>\n<ul>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token operator\">&lt;</span>add<span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      num1<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n      num2<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n          <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        num1<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n        num2<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                  \n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        result<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>\n        add<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        num2<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">,</span>                  \n      add<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n      num2<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n    <span class=\"token punctuation\">]</span>                  \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>JS 에서 말하는 <a href=\"https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Closures\">Closure</a>란? 별도의 <strong>개념</strong>이 아닌, <u><strong>Scope Chain 매커니즘</strong></u>에 의한 <strong>바인딩 환경</strong>을 말하는것이다.<p></p>\n<ul>\n<li>\n<p>일반적인 Closure 환경</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context;</span>\n\n    <span class=\"token comment\">// 식별자 검색을 통해, 상위 계층의 VO 에 접근하여 결과를 반환한다.</span>\n    <span class=\"token comment\">// AFunctionExecutionContext.scopeChain[1].VO.x</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>하지만 Closure <strong>환경</strong>으로 인해, <strong>메모리 누수</strong>가 발생할 수 있다.</p>\n<ul>\n<li>\n<p>makeAdder 함수 호출 시, 반환받은 add5 함수 [[Scope]] 속성에는, 모든 부모 계층의 <span style=\"color:#c11f1f\">VO, AO(VO)</span> 가 <strong>영구적</strong>으로 포함된다.</p>\n</li>\n<li>\n<p>즉 makeAdder 함수(상위 계층) 종료 시, 소멸되는 <span style=\"color:#c11f1f\">AO(VO)</span> 가, 해당 [[Scope]] 속성 내부에 영구적으로 보관된다는 것이다.(<strong>메모리 누수의 원인</strong>)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">makeAdder</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \n  <span class=\"token comment\">// function execution context</span>\n  \n  <span class=\"token comment\">// 반환되는 익명함수에는 Scope Chain 매커니즘에 의해 부모 계층의 모든 VO 가 포함되어있다.</span>\n  <span class=\"token comment\">// 부모 계층의 AO(VO)({x: 5})</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  \n    <span class=\"token comment\">// function execution context</span>\n    <span class=\"token comment\">// Scope Chain 의 식별자 검색을 통해 부모 계층의 Vo.x 속성을 사용한다.</span>\n    \n    <span class=\"token comment\">// anonymousFunctionExecutionContext.scopeChain.makeAdderFunctionExecutionContext.AO.x</span>\n    <span class=\"token comment\">// anonymousFunctionExecutionContext.scopeChain.AO.y</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> add5 <span class=\"token operator\">=</span> <span class=\"token function\">makeAdder</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span><span class=\"token function\">add5</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 7</span>\n</code></pre></div>\n</li>\n<li>\n<p>anonymousFunction(= add5) 함수 [[Scope]] 속성 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">anonymousFunction</span><span class=\"token punctuation\">(</span><span class=\"token operator\">=</span> add5<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span>Scope<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token operator\">&lt;</span>makeAdder<span class=\"token operator\">></span> functionExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>                \n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     x<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     makeAdder<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n     add5<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>anonymousFunction(= add5) 함수 <strong>Scope Chain</strong> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">anonymousFunction</span><span class=\"token punctuation\">(</span><span class=\"token operator\">=</span> add5<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n   <span class=\"token constant\">AO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">2</span>                \n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     y<span class=\"token operator\">:</span> <span class=\"token number\">2</span>                \n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token operator\">&lt;</span>makeAdder<span class=\"token operator\">></span> functionExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token number\">5</span>                \n     <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n     x<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n     makeAdder<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n     add5<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span>\n   <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Eval Execution Context 의 <strong>Scope Chain</strong></p>\n<ul>\n<li>\n<p>eval execution context 의 <strong>Scope Chain</strong> 은 calling context 의 <strong>Scope Chain</strong> 을 따라간다.</p>\n</li>\n<li>\n<p>즉 <span style=\"color:#6298c1\">eval</span> 함수가 포함된 execution context 의 <strong>Scope Chain</strong> 을 갖는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">evalExecutionContext<span class=\"token punctuation\">.</span>Scope <span class=\"token operator\">===</span> callingContext<span class=\"token punctuation\">.</span>Scope<span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>실행 코드</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// global execution context 의 Scope Chain 을 갖는다.</span>\n<span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(x)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// function execution context</span>\n\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// A function execution context 의 Scope Chain 을 갖는다.</span>\n  <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(x, y)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 2</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// B function execution context 의 Scope Chain 을 갖는다.</span>\n\n    <span class=\"token keyword\">var</span> z <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(x, y, z)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1 2 3</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token constant\">B</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>Function 생성자 함수</p>\n<ul>\n<li>\n<p><span style=\"color:#c11f1f\">Function 생성자 함수</span>를 통한, <strong>함수 생성 시</strong> 생성되는 [[Scope]] property 에는 Global Execution Context 의 <span style=\"color:#c11f1f\">VO</span> 만 포함된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> fn <span class=\"token operator\">=</span> <span class=\"token function\">Function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(x, y);'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1, 2</span>\n\n<span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>globalExecutionContext 의 x 변수에 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// function execution context</span>\n\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> fn <span class=\"token operator\">=</span> <span class=\"token function\">Function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(x);'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n\n  <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>\n<p>functionExecutionContext 의 y 변수에 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">var</span> x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n  <span class=\"token comment\">// function execution context</span>\n\n  <span class=\"token comment\">// AFunctionExecutionContext.AO.y</span>\n  <span class=\"token keyword\">var</span> y <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> fn <span class=\"token operator\">=</span> <span class=\"token function\">Function</span><span class=\"token punctuation\">(</span><span class=\"token string\">'console.log(y);'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Uncaught ReferenceError: y is not defined</span>\n\n  <span class=\"token function\">fn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>Prototype Chain 확장 검색</p>\n<ul>\n<li>\n<p>만약 <strong>Scope Chain</strong> 내부 <span style=\"color:#c11f1f\">VO</span> 에 원하는 <strong>식별자 이름</strong>이 없을경우, <span style=\"color:#c11f1f\">VO</span> 객체의 <strong>원형</strong>인 Object.prototype 까지 검색 후 찾아낸다.</p>\n<ul>\n<li>\n<p>즉 <em>Global Execution Context 내부 <span style=\"color:#c11f1f\">VO</span> 는 그 원형인 Object.prototype 객체를 참조할 수 있다.</em></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  \n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// 어떤 execution context 의 VO 에도 x 속성이 선언하지 않았다.</span>\n\n    <span class=\"token comment\">// function execution context</span>\n    <span class=\"token comment\">// globalExecutionContext.VO.__proto__.x 속성을 참조한다.</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">dir</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span>\n<span class=\"token punctuation\">}</span>\n                  \n<span class=\"token comment\">// Object 객체의 원형을 확장한다.</span>\n<span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token constant\">A</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// A function object</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>              \n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n          __proto__<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            x<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token constant\">A</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        __proto__<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          x<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n      <span class=\"token punctuation\">]</span>              \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Scope Chain</strong> 을 <strong>확장</strong>하는 with 문 과 catch 절</p>\n<ul>\n<li>\n<p>with 문</p>\n<ul>\n<li>\n<p>with 문을 만나면, 해당 Execution Context 의 <strong>Scope Chain</strong> 은 전달된 인자로 <strong>확장</strong>된다.<p></p>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">실행 코드</span></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n<span class=\"token comment\">// global execution context</span>\n\n<span class=\"token comment\">// globalExecutionContext.VO.person</span>\n<span class=\"token keyword\">var</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Nicholas'</span><span class=\"token punctuation\">,</span>\n    age<span class=\"token operator\">:</span> <span class=\"token number\">30</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// globalExecutionContext.VO.num2</span>\n<span class=\"token keyword\">var</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// globalExecutionContext.VO.displayInfo</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">displayInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n    <span class=\"token comment\">// function execution context</span>\n    <span class=\"token comment\">// displayInfoFunctionExecutionContext.AO.count</span>\n    <span class=\"token keyword\">var</span> count <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// with 문에 전달된 인자(person)로 해당 Scope Chain 이 확장된다.</span>\n    <span class=\"token keyword\">with</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>name<span class=\"token operator\">:</span> <span class=\"token string\">'Angel'</span><span class=\"token punctuation\">,</span> age<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n        <span class=\"token comment\">// 확장된 Scope Chain 을 통해 객체 속성에 접근한다.</span>\n        <span class=\"token comment\">// displayInfoFunctionExecutionContext.scopeChain.withObject.name</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Angel'</span>\n        <span class=\"token comment\">// displayInfoFunctionExecutionContext.scopeChain.withObject.age</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>age<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 18</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">displayInfo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token operator\">&lt;</span>displayInfo<span class=\"token operator\">></span> functionExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        count<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token comment\">// with 문으로 인해, Scope Chain 이 확장된다.(Scope Chain 의 가장 앞(ScopeChain[0])에 추가된다.</span>\n        <span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'Angel'</span><span class=\"token punctuation\">,</span>\n          age<span class=\"token operator\">:</span> <span class=\"token number\">18</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>    \n        <span class=\"token constant\">AO</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          arguments<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          count<span class=\"token operator\">:</span> <span class=\"token number\">5</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                                  \n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          person<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            name<span class=\"token operator\">:</span> <span class=\"token string\">'Nicholas'</span><span class=\"token punctuation\">,</span>\n            age<span class=\"token operator\">:</span> <span class=\"token number\">30</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          displayInfo<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n          num2<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        person<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          name<span class=\"token operator\">:</span> <span class=\"token string\">'Nicholas'</span><span class=\"token punctuation\">,</span>\n          age<span class=\"token operator\">:</span> <span class=\"token number\">30</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        displayInfo<span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span> reference to <span class=\"token keyword\">function</span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        num2<span class=\"token operator\">:</span> <span class=\"token number\">10</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span>\n      <span class=\"token punctuation\">]</span>                  \n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>catch 절</p>\n<ul>\n<li>\n<p>catch 절을 만나면, 해당 Execution Context 의 <strong>Scope Chain</strong> 은 전달된 인자(ex)로 <strong>확장</strong>된다.<p></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">\n  <span class=\"token comment\">// global execution context</span>\n\n  <span class=\"token keyword\">try</span><span class=\"token punctuation\">{</span>\n  \n    a<span class=\"token punctuation\">;</span> <span class=\"token comment\">// error</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  \n    <span class=\"token comment\">// globalExecutionContext.scopeChain.catchObject(ex).message</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token template-punctuation string\">`</span></span>`</code></pre></div>\n</li>\n<li>\n<p><span style=\"color:#c11f1f\">ECStack</span> 내부</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token keyword\">var</span> ECStack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    globalExecutionContext<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">Scope</span><span class=\"token punctuation\">(</span>Scope Chain<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">VO</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>exception object<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          message<span class=\"token operator\">:</span> <span class=\"token string\">'a is not defined'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token operator\">...</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>                    \n        globalExecutionContext<span class=\"token punctuation\">.</span><span class=\"token constant\">VO</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">]</span>\t\t\t\t\t\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>참고 URL</h2>\n<ul>\n<li>\n<p><a href=\"http://dmitrysoshnikov.com/ecmascript/chapter-4-scope-chain/\">ECMA-262-3 in detail. Chapter 4. Scope chain.</a><p></p>\n</li>\n<li>\n<p><a href=\"http://archive.oreilly.com/pub/a/server-administration/excerpts/even-faster-websites/writing-efficient-javascript.html\">Writing Efficient JavaScript: Chapter 7 - Even Faster Websites</a></p>\n</li>\n</ul>","frontmatter":{"title":"Scope Chain 그리고 Closure","date":"October 11, 2015","description":"JavaScript Scope Chain 그리고 Closure 대해 알아보기"}},"previous":{"fields":{"slug":"/2015-10-09-enumerable-inJS/"},"frontmatter":{"title":"JS Enumerable(열거자) or Nonenumerable(비 열거자)"}},"next":{"fields":{"slug":"/2015-10-13-execution-context-inJS/"},"frontmatter":{"title":"Execution Context in JS"}}},"pageContext":{"id":"bd389aae-3ed9-5fcf-9f74-86c239e2648b","previousPostId":"d2fb7ccc-6da9-59ad-bdc0-2cf703702189","nextPostId":"8d28a6ff-4f0e-582d-bff2-ae2da0688bf3"}},
    "staticQueryHashes": ["2841359383","3257411868"]}